//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SolScript.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CompilerResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CompilerResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SolScript.Properties.CompilerResources", typeof(CompilerResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The abstract function &quot;{0}&quot; was declared in the non abstract class &quot;{1}&quot;. Only abstract clases may have abstract functions..
        /// </summary>
        internal static string Err_AbstractFunctionIsNonAbstractClass {
            get {
                return ResourceManager.GetString("Err_AbstractFunctionIsNonAbstractClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A base call is outside of a class..
        /// </summary>
        internal static string Err_BaseNotInClass {
            get {
                return ResourceManager.GetString("Err_BaseNotInClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base call in class &quot;{0}&quot; is not allowed since the given class has no base class..
        /// </summary>
        internal static string Err_BaseWithoutBaseClass {
            get {
                return ResourceManager.GetString("Err_BaseWithoutBaseClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The bytecode id {0} requested by type &quot;{1}&quot; is already used by type &quot;{2}&quot;..
        /// </summary>
        internal static string Err_BytecodeIdAlreadyUsed {
            get {
                return ResourceManager.GetString("Err_BytecodeIdAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A base call must use a constant expression..
        /// </summary>
        internal static string Err_CannotIndexBaseDynamically {
            get {
                return ResourceManager.GetString("Err_CannotIndexBaseDynamically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot index base with a value of type &quot;{0}&quot;..
        /// </summary>
        internal static string Err_CannotIndexBaseWithType {
            get {
                return ResourceManager.GetString("Err_CannotIndexBaseWithType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value of type &quot;{0}&quot; cannot be indexed..
        /// </summary>
        internal static string Err_CannotIndexType {
            get {
                return ResourceManager.GetString("Err_CannotIndexType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class &quot;{0}&quot; does not implement all abstract functions: {1}.
        /// </summary>
        internal static string Err_ClassDoesNotImplementAllAbstracts {
            get {
                return ResourceManager.GetString("Err_ClassDoesNotImplementAllAbstracts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The function &quot;{1}&quot; in class &quot;{0}&quot; conflicts with the field &quot;{2}&quot;..
        /// </summary>
        internal static string Err_ClassFieldConflictsWithFunction {
            get {
                return ResourceManager.GetString("Err_ClassFieldConflictsWithFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field &quot;{1}&quot; in class &quot;{0}&quot; is invalid..
        /// </summary>
        internal static string Err_ClassFieldIsInvalid {
            get {
                return ResourceManager.GetString("Err_ClassFieldIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class &quot;{0}&quot; does not have a field with the name &quot;{1}&quot;..
        /// </summary>
        internal static string Err_ClassFieldMissing {
            get {
                return ResourceManager.GetString("Err_ClassFieldMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field &quot;{1}&quot; in class &quot;{1}&quot; is not visible to class &quot;{2}&quot;..
        /// </summary>
        internal static string Err_ClassFieldNotVisibleToClass {
            get {
                return ResourceManager.GetString("Err_ClassFieldNotVisibleToClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field &quot;{1}&quot; in class &quot;{1}&quot; is not visible to global context..
        /// </summary>
        internal static string Err_ClassFieldNotVisibleToGlobal {
            get {
                return ResourceManager.GetString("Err_ClassFieldNotVisibleToGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The function &quot;{1}&quot; in class &quot;{0}&quot; hides the function &quot;{2}&quot; but does not have the override member modifier..
        /// </summary>
        internal static string Err_ClassFunctionDoesNotOverride {
            get {
                return ResourceManager.GetString("Err_ClassFunctionDoesNotOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The function &quot;{1}&quot; in class &quot;{0}&quot; is invalid..
        /// </summary>
        internal static string Err_ClassFunctionIsInvalid {
            get {
                return ResourceManager.GetString("Err_ClassFunctionIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The function &quot;{1}&quot; in class &quot;{0}&quot; has an override member modifier but does not have a function to override..
        /// </summary>
        internal static string Err_ClassFunctionOverridesNothing {
            get {
                return ResourceManager.GetString("Err_ClassFunctionOverridesNothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The function &quot;{1}&quot;({2}-access) in class &quot;{0}&quot; overrides the function &quot;{3}&quot;({4}-access). The functions have a different access modifier..
        /// </summary>
        internal static string Err_ClassFunctionOverridesOtherAccess {
            get {
                return ResourceManager.GetString("Err_ClassFunctionOverridesOtherAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field &quot;{1}&quot; in class &quot;{0}&quot; conflicts with field &quot;{2}&quot;..
        /// </summary>
        internal static string Err_ConflictingClassField {
            get {
                return ResourceManager.GetString("Err_ConflictingClassField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable &quot;{0}&quot; exists multiple times within its chunk hierarchy..
        /// </summary>
        internal static string Err_DuplicateChunkVariable {
            get {
                return ResourceManager.GetString("Err_DuplicateChunkVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create dynmaic mapping for the SoLScript class &quot;{0}&quot; since it is already mapped to the native class &quot;{1}&quot;..
        /// </summary>
        internal static string Err_DynMapClassIsAlreadyMapped {
            get {
                return ResourceManager.GetString("Err_DynMapClassIsAlreadyMapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following error occured while building the dynamic mapping for {0} SolScript classes:\n{1}.
        /// </summary>
        internal static string Err_DynMapCompilerError {
            get {
                return ResourceManager.GetString("Err_DynMapCompilerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occured while calling the SolScript function &quot;{0}&quot; from a dynamically created native wrapper. See inner exception for details..
        /// </summary>
        internal static string Err_DynMapException {
            get {
                return ResourceManager.GetString("Err_DynMapException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create source reference file for the native mappings..
        /// </summary>
        internal static string Err_DynMapFailedToWriteSourceFile {
            get {
                return ResourceManager.GetString("Err_DynMapFailedToWriteSourceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SolScript function &quot;{0}&quot; tried to override itself. This is a bug in SolScript..
        /// </summary>
        internal static string Err_DynMapFunctionTriedToOverrideSelf {
            get {
                return ResourceManager.GetString("Err_DynMapFunctionTriedToOverrideSelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a native mapping for SolScript class &quot;{0}&quot; since it does not override a natice class..
        /// </summary>
        internal static string Err_DynMapNoNativeDescriptor {
            get {
                return ResourceManager.GetString("Err_DynMapNoNativeDescriptor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to validate the class &quot;{0}&quot;..
        /// </summary>
        internal static string Err_FailedToValidateClass {
            get {
                return ResourceManager.GetString("Err_FailedToValidateClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to validate the field &quot;{0}&quot;..
        /// </summary>
        internal static string Err_FailedToValidateField {
            get {
                return ResourceManager.GetString("Err_FailedToValidateField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to validate the function &quot;{0}&quot;..
        /// </summary>
        internal static string Err_FailedToValidateFunction {
            get {
                return ResourceManager.GetString("Err_FailedToValidateFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The access modifier &quot;{1}&quot; of function &quot;{0}&quot; prohibits the used member modifier &quot;{2}&quot;..
        /// </summary>
        internal static string Err_FunctionAccessProhibitsModifier {
            get {
                return ResourceManager.GetString("Err_FunctionAccessProhibitsModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The global-defined function &quot;{0}&quot; conflicts with the field &quot;{1}&quot;..
        /// </summary>
        internal static string Err_GlobalFieldConflictsWithFunction {
            get {
                return ResourceManager.GetString("Err_GlobalFieldConflictsWithFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The global-defined function &quot;{0}&quot; has the member modifier &quot;{1}&quot;. Global functions may not have member modifiers..
        /// </summary>
        internal static string Err_GlobalFunctionMayNotHaveModifier {
            get {
                return ResourceManager.GetString("Err_GlobalFunctionMayNotHaveModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation may not be performed in the current state({0}). Required state is {1}..
        /// </summary>
        internal static string Err_InvalidCompilerState {
            get {
                return ResourceManager.GetString("Err_InvalidCompilerState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key {0} in a table constructor is invalid..
        /// </summary>
        internal static string Err_TableConstructorKeyError {
            get {
                return ResourceManager.GetString("Err_TableConstructorKeyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value {0} in a table constructor is invalid..
        /// </summary>
        internal static string Err_TableConstructorValueError {
            get {
                return ResourceManager.GetString("Err_TableConstructorValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &quot;{0}&quot; is already assigned to bytecode ID {1}, but was requested to be assigned to ID {2}..
        /// </summary>
        internal static string Err_TypeAlreadyAssingedToBytecodeId {
            get {
                return ResourceManager.GetString("Err_TypeAlreadyAssingedToBytecodeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable declaration of &quot;{0}&quot; is not in a chunk..
        /// </summary>
        internal static string Err_VariableDeclarationNotInChunk {
            get {
                return ResourceManager.GetString("Err_VariableDeclarationNotInChunk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable &quot;{0}&quot; is declared with a type of &quot;{1}&quot;, however the initializer returns a value of type &quot;{2}&quot;.The types are not compatible..
        /// </summary>
        internal static string Err_VariableInitializerTypeDoesNotMatchDeclaredType {
            get {
                return ResourceManager.GetString("Err_VariableInitializerTypeDoesNotMatchDeclaredType", resourceCulture);
            }
        }
    }
}
